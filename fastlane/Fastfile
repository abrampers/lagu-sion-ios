default_platform(:ios)

platform :ios do
  before_all do |lane|
    ENV['SLACK_CHANNEL'] = "#ios-build"
    ENV['APP_XCODEPROJ'] = "./LaguSion.xcodeproj"
    ENV['APP_TARGET'] = "LaguSion"
    ENV['BAZEL_BUILD_OUTPUT'] = "bazel-bin/LaguSion/LaguSion.ipa"

    if ENV['CI']
      setup_ci
    end
  end

  def current_version
    get_version_number(xcodeproj: ENV['APP_XCODEPROJ'], target:
    ENV['APP_TARGET'], configuration: "Debug")
  end

  desc "Build iOS App"
  lane :build do
    increment_build_number_in_plist(
      build_number: current_version + "-" + (ENV['GITHUB_WORKFLOW'] || "Local") + "-" + (ENV['GITHUB_RUN_NUMBER'] || "0"),
      xcodeproj: ENV['APP_XCODEPROJ']
    )

    disable_automatic_code_signing(path: ENV['APP_XCODEPROJ'])

    match(
      type: "adhoc", 
      readonly: true,
    )

    build_app(
      scheme: "LaguSion",
      export_method: "ad-hoc",
      derived_data_path: "./DerivedData/"
    )
    ENV['IPA_OUTPUT_PATH'] = lane_context[SharedValues::IPA_OUTPUT_PATH]
    appcenter
  end

  desc "Upload to AppCenter"
  lane :appcenter do
    appcenter_upload(
      api_token: ENV['APPCENTER_API_TOKEN'],
      owner_name: ENV['APPCENTER_OWNER_NAME'],
      owner_type: "user",
      app_name: ENV['APPCENTER_APP_NAME'],
      app_os: "iOS",
      file: (ENV['IPA_OUTPUT_PATH'] || ENV['BAZEL_BUILD_OUTPUT']),
    )

    version = appcenter_fetch_version_number(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      app_name: ENV["APPCENTER_APP_NAME"]
    )

    slack_team("Workflow #{ENV['GITHUB_WORKFLOW']} successful.
    #{build_appcenter_release_url(version["id"])}")
  end

  def build_appcenter_release_url(id)
    return "https://appcenter.ms/orgs/#{ENV["APPCENTER_OWNER_NAME"]}/apps/#{ENV["APPCENTER_APP_NAME"]}/distribute/releases/#{id}"
  end

  def slack_team(message)
    slack(
      message: message,
      slack_url: ENV['SLACK_URL'],
      channel: ENV['SLACK_CHANNEL'],
      fail_on_error: false,
      default_payloads: []
    )
  end
end
